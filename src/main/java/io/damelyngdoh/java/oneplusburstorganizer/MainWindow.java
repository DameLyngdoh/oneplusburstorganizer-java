package io.damelyngdoh.java.oneplusburstorganizer;

import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 * Swing GUI window for the application.
 * 
 * @author Dame Lyngdoh
 * @version 1.0.0
 * @since 2019-05-24
 */
@SuppressWarnings("serial")
public class MainWindow extends javax.swing.JFrame {

    private File srcDir = null, dstDir = null;
    private JFileChooser dirChooser = null;
    private OrganizerWorker organizer = null;
    
    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
        this.dirChooser = new JFileChooser();
        this.dirChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        this.toggleProcessButtonEnable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        processingDialog = new javax.swing.JDialog();
        processingLabel = new javax.swing.JLabel();
        cancelButton = new javax.swing.JButton();
        inputPanel = new javax.swing.JPanel();
        srcTextField = new javax.swing.JTextField();
        dstTextField = new javax.swing.JTextField();
        srcBrowseButton = new javax.swing.JButton();
        dstBrowseButton = new javax.swing.JButton();
        srcLabel = new javax.swing.JLabel();
        dstLabel = new javax.swing.JLabel();
        processButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        resultScrollPane = new javax.swing.JScrollPane();
        resultTable = new javax.swing.JTable();

        processingDialog.setTitle("Processing");
        processingDialog.setMinimumSize(new java.awt.Dimension(400, 90));
        processingDialog.setModal(true);
        processingDialog.setResizable(false);
        processingDialog.setType(java.awt.Window.Type.UTILITY);

        processingLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        processingLabel.setText("Processing. Cancelling will result in incomplete movement of files.");

        cancelButton.setMnemonic('c');
        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout processingDialogLayout = new javax.swing.GroupLayout(processingDialog.getContentPane());
        processingDialog.getContentPane().setLayout(processingDialogLayout);
        processingDialogLayout.setHorizontalGroup(
            processingDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, processingDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(processingLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(processingDialogLayout.createSequentialGroup()
                .addGap(165, 165, 165)
                .addComponent(cancelButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        processingDialogLayout.setVerticalGroup(
            processingDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, processingDialogLayout.createSequentialGroup()
                .addContainerGap(64, Short.MAX_VALUE)
                .addComponent(processingLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cancelButton)
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        inputPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Directories"));

        srcTextField.setEditable(false);
        srcTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                srcTextFieldActionPerformed(evt);
            }
        });

        dstTextField.setEditable(false);

        srcBrowseButton.setText("Browse");
        srcBrowseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                srcBrowseButtonActionPerformed(evt);
            }
        });

        dstBrowseButton.setText("Browse");
        dstBrowseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dstBrowseButtonActionPerformed(evt);
            }
        });

        srcLabel.setText("Source");

        dstLabel.setText("Destination");

        processButton.setMnemonic('p');
        processButton.setText("Process");
        processButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processButtonActionPerformed(evt);
            }
        });

        clearButton.setMnemonic('r');
        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout inputPanelLayout = new javax.swing.GroupLayout(inputPanel);
        inputPanel.setLayout(inputPanelLayout);
        inputPanelLayout.setHorizontalGroup(
            inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(inputPanelLayout.createSequentialGroup()
                        .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(srcLabel)
                            .addComponent(dstLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(inputPanelLayout.createSequentialGroup()
                                .addComponent(dstTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dstBrowseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(inputPanelLayout.createSequentialGroup()
                                .addComponent(srcTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(srcBrowseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(inputPanelLayout.createSequentialGroup()
                        .addComponent(processButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(97, Short.MAX_VALUE))
        );
        inputPanelLayout.setVerticalGroup(
            inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(srcTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(srcBrowseButton)
                    .addComponent(srcLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dstTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dstBrowseButton)
                    .addComponent(dstLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(processButton)
                    .addComponent(clearButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        resultTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        resultScrollPane.setViewportView(resultTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(inputPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(resultScrollPane))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(inputPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resultScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>                        

    private void srcTextFieldActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
    }                                            

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {                                            
        this.srcDir = this.dstDir = null;
        this.srcTextField.setText("");
        this.srcTextField.setToolTipText(null);
        this.dstTextField.setText("");
        this.dstTextField.setToolTipText(null);
        this.processButton.setEnabled(false);
    }                                           

    private void srcBrowseButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                
        this.commonBrowse(1);
    }                                               

    private void dstBrowseButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                
        this.commonBrowse(2);
    }                                               

    private void processButtonActionPerformed(java.awt.event.ActionEvent evt) {                                              
        organizer = new OrganizerWorker(this.srcDir, this.dstDir, this.processingDialog);
        organizer.execute();
        this.processingDialog.setVisible(true);
        this.resultTable.setModel(new TableModel(organizer.getResults()));
    }                                             

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {                                             
        if(this.organizer!=null){
            this.organizer.cancel(true);
        }
        this.processingDialog.setVisible(false);
    }                                            

    private void commonBrowse(int type){
        int option = dirChooser.showDialog(this, "Select");
        if(option!=JFileChooser.APPROVE_OPTION){
            return;
        }
        File f = this.dirChooser.getSelectedFile();
        if(!f.canRead()) {
            JOptionPane.showMessageDialog(this, "Read permission denied for directory:\n" + f.getPath(), "Permission Denied", JOptionPane.WARNING_MESSAGE);
            return;
        }
        else if(!f.canWrite()) {
            JOptionPane.showMessageDialog(this, "Write permission denied for directory:\n" + f.getPath(), "Permission Denied", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(type==1){
            this.srcDir = dirChooser.getSelectedFile();
            this.srcTextField.setText(this.srcDir.getPath());
            this.srcTextField.setToolTipText(this.srcDir.getPath());
        }
        else{
            
            this.dstDir = dirChooser.getSelectedFile();
            this.dstTextField.setText(this.dstDir.getPath());
            this.dstTextField.setToolTipText(this.dstDir.getPath());
        }
        this.toggleProcessButtonEnable();
    }
    
    private void toggleProcessButtonEnable(){
        if(this.srcDir!=null && this.dstDir!=null){
            this.processButton.setEnabled(true);
        }
        else{
            this.processButton.setEnabled(false);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton clearButton;
    private javax.swing.JButton dstBrowseButton;
    private javax.swing.JLabel dstLabel;
    private javax.swing.JTextField dstTextField;
    private javax.swing.JPanel inputPanel;
    private javax.swing.JButton processButton;
    private javax.swing.JDialog processingDialog;
    private javax.swing.JLabel processingLabel;
    private javax.swing.JScrollPane resultScrollPane;
    private javax.swing.JTable resultTable;
    private javax.swing.JButton srcBrowseButton;
    private javax.swing.JLabel srcLabel;
    private javax.swing.JTextField srcTextField;
    // End of variables declaration                   
}
